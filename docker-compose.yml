version: '2'
services:
    db:
      image: postgres:latest
      ports:
        - "5432:${DB_PORT}"
      volumes:
        - postgres:/var/lib/postgresql/data
      environment:
        POSTGRES_PASSWORD: "${DB_PASSWORD}"
        POSTGRES_USER: "${DB_USER}"
      networks:
        legacy:
          aliases:
            - db
      logging: &logging
        driver: json-file
        options:
          max-size: "100k"
          max-file: "20"
    redis:
      image: redis
      ports:
        - "6379:6379"
      networks:
        legacy:
          aliases:
            - redis
      volumes:
        - redis:/data
      logging:
        <<: *logging
    web: &rails
      build:
        context: .
      command: bundle exec rails s -p 3000 -b '0.0.0.0'
      volumes:
        - .:/app
        - bundle_cache:/bundle
      ports:
        - "3000:3000"
      stdin_open: true
   #   tty: true
      env_file:
        - '.env'
      depends_on:
        - db
        - redis
      networks:
        - legacy
#    nginx:
#      image: nginx:1.15-alpine
#      restart: unless-stopped
#      volumes:
#        - ./data/nginx:/etc/nginx/conf.d
#        - ./data/certbot/conf:/etc/letsencrypt
#        - ./data/certbot/www:/var/www/certbot
#      ports:
#        - "80:80"
#        - "443:443"
#      command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
#    certbot:
#      image: certbot/certbot
#      restart: unless-stopped
#      volumes:
#        - ./data/certbot/conf:/etc/letsencrypt
#        - ./data/certbot/www:/var/www/certbot
#      entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
    postgres:
    bundle_cache:
    redis:
networks:
    legacy:

